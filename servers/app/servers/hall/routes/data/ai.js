////////////////////////////////////////////////////////////////////////////////
// Weapon Data Operation
// 武器数据的操作更新
// update_ai
////////////////////////////////////////////////////////////////////////////////

//==============================================================================
// import
//==============================================================================
//------------------------------------------------------------------------------
// 工具
//------------------------------------------------------------------------------
var buzz_cst_game = require('../../src/buzz/cst/buzz_cst_game');
var data_util = require('./data_util');
var BuzzUtil = require('../../src/utils/BuzzUtil');

//------------------------------------------------------------------------------
// 缓存(Cache)
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// 配置表
//------------------------------------------------------------------------------
var api_map = require('../api_map');


//==============================================================================
// const
//==============================================================================
var DEBUG = 0;
var ERROR = 1;

var TAG = "【data/ai】";

//==============================================================================
// public
//==============================================================================

//------------------------------------------------------------------------------
// definition
//------------------------------------------------------------------------------
exports.update_ai = update_ai;

//------------------------------------------------------------------------------
// implement
//------------------------------------------------------------------------------

/**
 * 添加武器升级记录
 */
function update_ai(req, res) {
    const FUNC = TAG + "update_ai() --- ";

    if (DEBUG) console.log(FUNC + "CALL...");
    if (DEBUG) console.log(FUNC + "req.body: " + JSON.stringify(req.body));
    
    data_util.request_info(req, "update_ai");
    var dataObj = {};
    if (!(dataObj = data_util.get_dao_data(req, res))) {
        return;
    }
    BuzzUtil.cacheLinkDataApi(dataObj, "update_ai");

    myDao.updateAi(dataObj, function (err, results) {
        if (err) {
            if (ERROR) console.error(FUNC + "msg:", "更新AI数据失败");
            if (ERROR) console.error(FUNC + "err:", err);
            res.success({ type: 1, msg: '更新AI数据失败', err: err });
        } else {
            // if (DEBUG) console.log("update_account results:", results);
            res.success({ type: 1, msg: '更新AI数据成功', data: results });
        }
    });
}


//==============================================================================
// private
//==============================================================================